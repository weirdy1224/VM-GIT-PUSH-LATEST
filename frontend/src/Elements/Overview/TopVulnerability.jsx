import axios from "axios";
import React, { useEffect, useState } from "react";
import './Overview.css';

const SeverityLabel = ({ severity }) => (
  <span className={`severity-badge ${severity.toLowerCase()}`}>
    {severity}
  </span>
);

export default function TopVulnerabilitiesList() {
  const [vulnerabilitiesData, setVulnerabilitiesData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const userId = localStorage.getItem("userId");
  const token = localStorage.getItem("token");

  useEffect(() => {
    const fetchVulnerabilities = async () => {
      try {
        if (!userId || !token) {
          throw new Error("User ID or token is missing. Please log in.");
        }

        setLoading(true);
        const response = await axios.get("http://localhost:5000/api/topvul", {
          headers: {
            Authorization: `Bearer ${token}`,
            "X-User-Id": userId,
          },
        });

        if (!response.data.success) {
          throw new Error(response.data.message || "API returned an error");
        }

        setVulnerabilitiesData(response.data.data || []);
        setError(null);
      } catch (error) {
        console.error("Error fetching vulnerabilities:", error);
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchVulnerabilities();
  }, [userId, token]);

  return (
    <div className="data-card">
      <h2>Top Vulnerabilities</h2>
      {loading ? (
        <p>Loading vulnerabilities...</p>
      ) : error ? (
        <p style={{ color: "#dc2626" }}>{error}</p>
      ) : vulnerabilitiesData.length > 0 ? (
        <ul className="list">
          {vulnerabilitiesData.map((vulnerability, index) => (
            <li key={index} className="list-item">
              <span>{vulnerability.bug_name}</span>
              <SeverityLabel severity={vulnerability.severity} />
            </li>
          ))}
        </ul>
      ) : (
        <p>No vulnerabilities to display.</p>
      )}
    </div>
  );
}